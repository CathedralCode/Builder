#!/usr/bin/env php
<?php

declare(strict_types=1);

// Insure running as cli application
if (php_sapi_name() !== 'cli') return printf('This is a CLI application.');

ini_set('log_errors', 1);
ini_set('display_errors', 0);

// Load autoload
if (array_key_exists('_composer_autoload_path', $GLOBALS)) $a = $GLOBALS['_composer_autoload_path'];
else
    foreach (['/../../../', '/../vendor/', '/vendor/', '/../'] as $p)
        foreach ([__DIR__, getcwd()] as $r)
            if (file_exists($r . $p . 'autoload.php')) {
                $a = $r . $p . 'autoload.php';
                break 2;
            }

if (!isset($a)) {
    fwrite(STDERR, 'Cannot locate autoloader; please run "composer install"' . PHP_EOL);
    exit(1);
}

$a = realpath($a);
$projectRoot = realpath(dirname($a) . '/../');

// include autoloader
require $a;

/**
 * Set the main application directory as the current working directory.
 * Everything is relative to the application root now.
 * This makes our life easier when dealing with paths.
 */
chdir($projectRoot);

// Load the global `dd` alias for Dumper
\Inane\Debug\Dumper::dumper();

dd([
    'a' => $a,
    'projectRoot' => $projectRoot,
]);


// Check for command line arguments
$hasArgs = count($_SERVER['argv']) == 1 ? false : true;
// Set if strict cli argument processing
$strict = in_array('--strict', $_SERVER['argv']);

dd([
    'hasArgs' => $hasArgs,
    'strict' => $strict,
]);

$builder = new \Cathedral\Builder\Builder('Builder');
